<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!-- Created from PDF via Acrobat SaveAsXML -->
<!-- Mapping table version: 28-February-2003 -->
<HTML>
<HEAD>
<META
 name="dc.creator"
 content="alan peslak" >
<META
 name="dc.title"
 content="Personal communications &ndash; encourage e-mail, cell phone, forum exchanges, IM" >
<META
 name="dc.date"
 content="2004-04-07T13:47:35Z" >
<META
 name="dc.date.modified"
 content="2004-04-08T19:00:01-04:00" >
<META
 name="generator"
 content="Adobe Acrobat Exchange-Pro 8.0" >
</HEAD>
<BODY bgcolor=white text=black link=blue vlink=purple alink=fushia >
<DIV class="Part" 

><H2 
 align="center"
><FONT size="+2" color="#000000"><B>Improving Software Quality: An Ethics Based Approac<FONT size="+2" color="#000000"><B>h 
</H2
><P 
 align="center"
><FONT size="+1"></B>Alan R. Peslak, Ph.D<FONT size="+1"></B>. 
<FONT size="+1">Information Sciences and Technolog<FONT size="+1">y 
Penn State University 
Dunmore, PA 18512 
Phone: 1-570-963-2640 
<FONT size="+1">peslak@psu.ed<FONT size="+1">u 
</P
><DIV class="Sect" 

><H4 

><B>ABSTRACT </H4
><P 

><FONT size="+1"></B>Software quality in recent years has been plagued by significant quality issues.  One of these issues is the rush to market of commercial software. This has resulted in poor quality leading to numerous updates and patches to correct inherent problems and to prevent malicious software attacks from viruses, worms, or other nefarious external hacking. The author believes that poor software quality presents an ethical issue for society. The issue of improvement in software quality is proposed to relate to fundamental ethical issues that need to be addressed by software developers.  The author explores various philosophical ethical theories to address this issue including Aristotelian virtue ethics, and Humean virtue ethics, settling on Humean virtue ethics as the most effective approach.  The author then proposes changes to industry codes of ethics as well as strengthening of the international software organizations as a social network to support necessary emphasis on proper software quality. </P
></DIV
><DIV class="Sect" 

><H4 

><FONT size="+1"><B>Categories and Subject Descriptors </H4
><P 

><FONT size="+1"></B>D.2.9 [<B>Software Engineering</B>]: Management &ndash; software quality assurance </P
><DIV class="Sect" 

><H5 

>K.4.1 [<B>Computers and Society</B>]: Public Policy Issues &ndash; ethics </H5
><P 

>K.7.1 [<B>The Computing Profession</B>]: Occupations </P
><P 

>K.7.3 [<B>The Computing Profession</B>]: Testing, Certification, and Licensing </P
><P 

>K.7.4 [<B>The Computing Profession</B>]:  Professional Ethics &ndash; codes of ethics, codes of good practice, ethical dilemmas  </P
></DIV
></DIV
><DIV class="Sect" 

><H4 

><FONT size="+1"><B>General Terms </H4
><P 

><FONT size="+1"></B>Management, Design, Legal Aspects, Verification. </P
></DIV
><DIV class="Sect" 

><H4 

><FONT size="+1"><B>Keywords </H4
><P 

><FONT size="+1"></B>Software ethics, Business ethics, Software quality, Code of ethics, Code of conduct </P
><P 

><FONT size="+1">Permission to make digital or hard copies of all or part of this work fo<FONT size="+1">r 
personal or classroom use is granted without fee provided that copies are 
not made or distributed for profit or commercial advantage and that copies 
bear this notice and the full citation on the first page. To copy otherwise, 
or republish, to post on servers or to redistribute to lists, requires prior 
specific permission and/or a fee. 
SIGMIS&rsquo;04, April 22&ndash;24, 2004, Tucson, Arizona, USA. 
Copyright 2004 ACM 1-58113-847-4/04/0004&hellip;$5.00<B>. 
</P
><DIV class="Sect" 

><H4 
 align="justify"
><FONT size="+1"><B>1. SOFTWARE QUALITY AND PROBLEMS </H4
><P 
 align="justify"
><FONT size="+1"></B>Software quality in recent times has been extremely poor causing significant monetary and social problems in both the United States and internationally.  According to the Standish Group only 28% of software projects succeed, cost overruns are at 45%, time overruns are 63% and the costs associated with these are in the tens of billions of dollars [12].  Though the full extent of quality problems is impossible to measure, software defects that have allowed viruses and worms to propagate have certainly already caused billions of dollars of economic losses.  Computer Economics estimated $13 billion of spending related to dealing with virus attacks in 2001 [10].  In the year 2000 the &ldquo;ILOVEYOU&rdquo; virus was estimated at causing $6.7 billion in damages [11]. </P
><P 
 align="justify"
>Quality problems are even affecting our national security. Richard Clarke the cybersecuriy advisor for President Bush was quoted as saying that &ldquo; quality control obviously isn&rsquo;t there&rdquo; when referring to commercial software products being sold today. He suggested that &ldquo;unsecure&rdquo; and buggy software is unacceptable and as a result his organization, the Critical Infrastructure Protection Board is developing a &ldquo;National Plan for Protecting Cyberspace&rdquo;. [23].  It is now being suggested that the Blaster worm indirectly accelerated the 2003 blackout by degrading systems performance that should have contained its spread [22]. </P
><P 
 align="justify"
>Software quality can also directly cost lives as evidenced by the deaths of at least four patients who received extremely excessive radiation overdoses due to a software error [13]. </P
><P 
 align="justify"
>Many authors have decried this lack of quality and sought solutions in traditional quality related areas.  Deming emphasizes statistical principles and prevention techniques. Ishikawa focuses on education.  Crosby presents his six C&rsquo;s of comprehension, commitment, competence, communication, correction, and continuance.  The IEEE recommends a TQM approach and development of a Software Quality Assurance Organization with the five components of Training and Planning, Audits, Inspections and Reviews, Standards and Procedures, and Metrics [24]. </P
><P 

>All these approaches suggest that the most important and perhaps the only issues to deal with are those that deal with the application of specific principles.  They fail to address what is perhaps the most important software quality issue of our time and that is the &ldquo;rush to market&rdquo; concept which allows error laden as well as error prone software to reach the market before it has been properly tested and reviewed.  The quality issue is not then a technical issue or a procedural issue but rather an ethical and moral issue. According to a survey prepared for PC World, eighty percent of users believe they have purchased software that contains quality problems, 29 percent believed most or all of their software contained errors and 86 percent believed that software companies rushed their product to market without all bugs fixed [15]. According to reliable sources quoted in Computerworld, eight percent of software companies ship untested code to beta sites and only 20% do formal testing. Also a majority of companies ship product with known bugs [14].  In our haste to market product we seem to be producing software that has not been properly, extensively tested and debugged, thus resulting in the current quality problems that are resulting in enormous costs for our society. </P
><P 

>This paper proposes that this ethical issue is one of the most important causes of software failures and needs to be addressed from an ethical viewpoint.  The paper reviews current attempts to address software quality from an ethical perspective including industry and association codes of conduct.  It then reviews philosophical and psychological theory to determine how these approaches affect individual behavior.  Finally it suggests improvements to current codes of conduct and the need to strengthen professional organizations as well as legal remedies to improve software quality and address its negative impact on the modern networked and computerized society. </P
></DIV
><DIV class="Sect" 

><H4 

><FONT size="+1"><B>2. HOW WE DEAL WITH SOFTWARE QUALITY </H4
><P 

><FONT size="+1"></B>With the &ldquo;rush to market&rdquo; approach and the intense competitive nature of software today, it is unrealistic to expect that software companies will significantly modify their operations to significantly improve software quality.  This generally leaves three possible solutions to the problem: market forces, legal and regulatory issues, and developer ethics.  Market forces could work in a perfectly competitive marketplace.  Products that had low quality would be shunned by consumers or users and higher quality products would be developed.  With today&rsquo;s market conditions where major software players often dominate specific markets, it is unrealistic to expect that market forces can bring about a significant change in producers&rsquo; approaches to software quality.  One potential exception to this can be through a purchaser with large buying power such as the federal government.  Clarke, Bush&rsquo;s cybersecurity czar suggests that he is going to &ldquo;hold him to it&rdquo; in referring to Bill Gates pledge to make security job number one at Microsoft [23]. If the federal government could demand higher quality software, their purchasing clout could have an impact. </P
><P 

>The second approach is legal and regulatory.  There have been lawsuits in the past that have had mixed results in addressing software faults.  The very nature of software licensing tends to preclude much immediate impact in this area.  In fact with the adoption of UCITA by some states, the legal responsibilities for software defects may have been significantly decreased.  Barring a major catastrophe directly related to a software defect, and given the lobbying interests of the software industry, coupled with the snail&rsquo;s pace of legislation, this is again an area where significant improvement is unlikely anytime in the immediate future. This leaves with the third and final area of software quality improvement, the developer ethical level. At present developers are creating code that clearly has not been sufficiently tested in order to progress into the marketplace.  Error riddled code as well as non-secure (and insufficiently tested) code is resulting in billions of dollars of damage to the economy daily. Lives are being lost and the security of our nation is being threatened by deficient software products.  Clearly our professional developers understand and know these weaknesses and shortcomings.  The time has come to address this issue directly by our front line professionals.  The challenge is how to accomplish this. </P
><P 

>This report will now review the philosophical approaches to ethical behavior and how it can directly relate to software quality. The report will then review the current attempts to address the ethical issues at a professional level, discuss their inadequacy, and suggest a more aggressive approach to improve software quality as an ethical imperative. </P
></DIV
><DIV class="Sect" 

><H4 

><FONT size="+1"><B>3. VIRTUE ETHICS AND THEIR  MODERN ANALYSIS </H4
><P 

><FONT size="+1"></B>A common mainstream ethical approach to computer ethics is virtue ethics [2]. Virtue ethics was first refined by Aristotle and generally consists of the notion that individuals should cultivate positive virtues and internalize these virtues.  As a result, individuals will be guided by these virtues and subsequently do the right thing under varying and changing circumstances. The virtues that Aristotle suggests should be cultivated include: bravery, generosity, magnificence, magnanimity, mildness, friendliness, truthfulness, wit, shame, and justice.  The virtues are developed through acts but do not consist of the acts themselves. They should be voluntary, be a conscious deliberated decision, and be wished.  We should deliberately perform our virtuous acts and work to the good [1].    </P
><P 

>Upon first review the Aristotelian concept of virtue ethics overcomes the inherent problems of societal complexity and seems to be a good ideal for computer ethics.  If individuals are taught the concepts of virtue ethics, consciously perform virtuous deeds and continue these actions into the workplace then shoddy workmanship and deliberately released untested, low quality products would disappear as virtuous women and men would not allow these practices to continue.  But alas, the Aristotelian ideal does not hold up in practice.  The concept of man being able to holding him to these high standards has been empirically disproved by a number of philosophical and psychological researchers. A noted study was undertaken whereby it was tested whether individuals would help a person who had dropped their papers outside a phone booth.  The determining factor in whether an individual would help was the immediate preceding circumstance of whether the individual who would provide help had found money returned in the coin slot of the pay phone. Neither the gender nor the personality nor the compassionate nature of the individual mattered.  What only mattered was the immediately preceding mental state generated by the finding or not finding of money  [6].  Given the relatively trivial nature of this experiment is unlikely that inner virtue can withstand the pressures of supervisors and competition. The Aristotelian concept given the nature of modern man unfortunately will not support an improvement in man&rsquo;s ethics or a subsequent improvement in software quality. However, there is a philosophical approach that does seem possible from a computer ethics and software quality viewpoint: Humean virtue ethics.  David Hume was a popular and influential 18<Sup><FONT size="+1">th</Sup><FONT size="+1"> century philosopher who had wide ranging views on a variety of political, economic, and ethical issues.  In his major philosophical work, A Treatise on Human Nature he presents a view of virtue ethics that is consistent with modern psychological findings as well as providing a basis for contemporary ethical theory [7].  His proposals can be found to be particularly applicable to computer ethics. </P
><P 
 align="justify"
>Merritt [9] specifically attempts to reconcile psychological findings of virtuous deeds with an underlying concept of virtue ethics.  She quickly discounts Aristotelian virtue ethics echoing Doris [6], suggesting that people have not been shown to be capable of the sustaining virtuous character upon which practical ethics can be based upon.  She call this concept MSC or motivational self-sufficiency of character.  Individuals have been shown not be to be able to sustain virtuous or ethical behavior in light of external pressures or influences.  These pressures she labels as &ldquo;situationalist descriptive psychology&rdquo;.  But she does see a practical possibility for virtue ethics the way that the virtue ethics principles are espoused by Hume.  According to Merritt, Hume suggests that virtue and virtuous conduct can be maintained not by individuals alone but through a socially supporting cast. What is important according to Hume is that the virtuous characteristics are maintained, not that they are maintained solely by individual character as Aristotle suggests.  This supporting cast can include relationships with others including partners, friends, co-workers, co-religionists or most importantly for our purposes, fellow members of associations.  The associations which are most appropriate for software quality can be the professional organizations of developers and software engineers.  Stronger associations and more specific and detailed codes of conduct coupled with appropriate disciplinary actions can be the social support necessary to maintain and strengthen virtue ethics in software development and produce safer, more effective, and more secure software throughout the world. </P
></DIV
><DIV class="Sect" 

><H4 
 align="justify"
><FONT size="+1"><B>4. SOFTWARE ASSOCIATIONS AND CODES OF ETHICS </H4
><P 
 align="justify"
><FONT size="+1"></B>The three most important software development associations in the world today which have prescribed codes of ethics/conduct are the IEEE or Institute for Electronics and Electrical Engineers and the Association for Computing Machinery, Inc (Software Engineering Code of Ethics and Professional Practice), the ACM or Association for Computing Machinery (ACM Code of Ethics and Bylaws), and the British Computer Society (Code of Conduct and Code of Practice).  All are voluntary associations and though all have strong participation and membership, employers rarely require membership for employment.  The three associations deal with software quality in a general way but given the natural bent of man toward situationalist personality ethics, enforcement of software quality via the current organizations and codes has not been successful. </P
><P 
 align="justify"
>The IEEE/ACM Software Engineering Code deals with quality in two locations in the code section 3, Product and section 5, Management.  Section 3 states </P
><DIV class="Sect" 

><P 
 align="justify"
>Principle 3 PRODUCT Software engineers shall ensure that their products and related modifications meet the highest professional standards possible. In particular, software engineers shall, as appropriate: </P
><P 
 align="justify"
>3.01. Strive for high quality, acceptable cost and a reasonable schedule, ensuring significant tradeoffs are clear to and accepted by the employer and the client, and are available for consideration by the user and the public. [8] </P
></DIV
><P 
 align="justify"
>Though quality is mentioned, it is weakened by terms such as &ldquo;highest . . .possible&rdquo; and &ldquo;ensuring tradeoffs are clear&rdquo;.  It is difficult to understand how software engineers can ensure tradeoffs are clear when they are unlikely to know or understand all the company and societal tradeoffs. </P
><P 
 align="justify"
>Section 5 states </P
><DIV class="Sect" 

><P 
 align="justify"
>Principle 5 MANAGEMENT Software engineering managers and leaders shall subscribe to and promote an ethical approach to the management of software development and maintenance. In particular, those managing or leading software engineers shall, as appropriate: </P
><P 
 align="justify"
>5.11. Not ask a software engineer to do anything inconsistent with this Code. [8] </P
></DIV
><P 
 align="justify"
>This principle is good and appropriate but given the unclear nature of the quality concept in principle 3, it is difficult to properly and ethically interpret this section. </P
><P 
 align="justify"
>The ACM Code of Ethics states </P
><DIV class="Sect" 

><P 
 align="justify"
>2. More specific Professional Responsibilities: As an ACM computing professional I will...  </P
><P 
 align="justify"
>2.1 Strive to achieve the highest quality in both the process and products of professional work. [3] </P
></DIV
><P 
 align="justify"
>This statement of quality is a bit less ambiguous than the former but comes across as somewhat vague and not as important as it needs to be. </P
><P 
 align="justify"
>Finally the British Computer Society in its Code of Conduct </P
><DIV class="Sect" 

><P 
 align="justify"
>The Public Interest </P
><P 
 align="justify"
>1<FONT size="+1"></B>. 	You shall carry out work or study with due care and diligence in accordance with the relevant authority's requirements, and the interests of system users. If your professional judgement is overruled, you shall indicate the likely risks and consequences. </P
><DL 

><DT 

>-</DT
><DD 

> The crux of the issue here, familiar to all professionals in whatever field, is the potential conflict between full and committed compliance with the relevant authority's wishes, and the independent and considered exercise of your judgement. </DD
><DT 

>-</DT
><DD 

> If your judgement is overruled, you are </DD
></DL
><P 
 align="justify"
>encouraged to seek advice and guidance from a peer or colleague on how best to respond. </P
><P 
 align="justify"
>2. 	In your professional role you shall have regard for the public health, safety and environment. </P
><DL 

><DT 

>-</DT
><DD 

> This is a general responsibility, which may be governed by legislation, convention or protocol. </DD
><DT 

>-</DT
><DD 

> If in doubt over the appropriate course of action to take in particular circumstances you should seek the counsel of a peer or colleague. </DD
></DL
><P 
 align="justify"
>3. 	You shall have regard to the legitimate rights of third parties. </P
><P 
 align="justify"
>- The term 'third Party' includes professional colleagues, or possibly competitors, or members of 'the public' who might be affected by an IS project without their being directly aware of its existence. </P
><P 
 align="justify"
>17. 	You shall accept professional responsibility for your work and for the work of colleagues who are defined in a given context as working under your supervision. [4] </P
></DIV
><P 
 align="justify"
>And in its Code of Practice states: </P
><DIV class="Sect" 

><P 
 align="justify"
>Responsibilities of Information Systems Practitioners </P
><P 
 align="justify"
>Information Systems Practitioners shall seek to upgrade their professional knowledge and skill and shall maintain awareness of technological developments, procedures and standards which are relevant to their field, and shall encourage their subordinates to do likewise. </P
><P 
 align="justify"
>The Practitioner has a duty of professional care to abide by those BCS sector-specific Codes of Practice which have any bearing on the practitioner's current role. </P
><P 
 align="justify"
>Should the Practitioner discover any difficulty in applying a Code of Practice, he or she shall immediately bring it to the attention of the BCS Registrar. </P
><P 
 align="justify"
>Information Systems Practitioners who are BCS members adopting the General Code of Practice are also bound by the requirements of the BCS Code of Conduct. Others adopting this Code of Practice are also advised to adhere to the Code of Conduct. [5] </P
></DIV
><P 
 align="justify"
>Overall the British Computer Society takes a much more explicit role in stressing quality and the responsibility of its members to maintain quality. </P
></DIV
><DIV class="Sect" 

><H4 
 align="justify"
><FONT size="+1"><B>5. ACCOUNTING PROFESSION CODE </H4
><P 

><FONT size="+1"></B>In contrast to the voluntary nature of information technology societies and adherence to codes of conduct, the public accounting profession has for years taken a much more aggressive approach to codes of conduct.  Though racked by scandals in recent years, the profession did not suffer from lack of rules and regulations but rather from instances of significant high profile cases, which for a long time went undetected and/or not enforced.  With strict standards in place, when the problems did surface there were specific rules and policies that were there to fall back on and enforce. The software profession should review these types of rules and regulations and provide the ethical social network to support virtuous software engineers and counteract situationist personality psychology. </P
><P 

>The AICPA or American Institute for Certified Public Accountants specifically requires adhering to its detailed code of conduct for continued membership.  For many financial activities, CPA certification is required by employers, thus there is a strong incentive for practitioners to maintain membership and abide by its rules. Some of the more applicable rules include: </P
><DIV class="Sect" 

><P 

>Section 52 - Article I: Responsibilities </P
><P 

>In carrying out their responsibilities as professionals, members should exercise sensitive professional and moral judgments in all their activities. </P
><P 

>.01 As professionals, certified public accountants perform an essential role in society. Consistent with that role, members of the American Institute of Certified Public Accountants have responsibilities to all those who use their professional services. Members also have a continuing responsibility to cooperate with each other to improve the art of accounting, maintain the public's confidence, and carry out the profession's special responsibilities for self-governance. The collective efforts of all members are required to maintain and enhance the traditions of the profession. [19] </P
><P 

>Section 54 - Article III: Integrity </P
><P 

>To maintain and broaden public confidence, members should perform all professional responsibilities with the highest sense of integrity.  </P
><P 

>.01 Integrity is an element of character fundamental to professional recognition. It is the quality from which the public trust derives and the benchmark against which a member must ultimately test all decisions. </P
><P 

>.02 Integrity requires a member to be, among other things, honest and candid within the constraints of client confidentiality. Service and the public trust should not be subordinated to personal gain and advantage. Integrity can accommodate the inadvertent error and the honest difference of opinion; it cannot accommodate deceit or subordination of principle. </P
><P 

>.03 Integrity is measured in terms of what is right and just. In the absence of specific rules, standards, or guidance, or in the face of conflicting opinions, a member should test decisions and deeds by asking: &quot;Am I doing what a person of integrity would do? Have I retained my integrity?&quot; Integrity requires a member to observe both the form and the spirit of technical and ethical standards; circumvention of those standards constitutes subordination of judgment. </P
><P 

>.04 Integrity also requires a member to observe the principles of objectivity and independence and of due care. [20] </P
><P 

>Section 56 - Article V: Due Care </P
><P 

>A member should observe the profession's technical and ethical standards, strive continually to improve competence and the quality of services, and discharge professional responsibility to the best of the member's ability.  </P
><P 

>.01 The quest for excellence is the essence of due care. Due care requires a member to discharge professional responsibilities with competence and diligence. It imposes the obligation to perform professional services to the best of a member's ability with concern for the best interest of those for whom the services are performed and consistent with the profession's responsibility to the public. </P
><P 

>.02 Competence is derived from a synthesis of education and experience. It begins with a mastery of the common body of knowledge required for designation as a certified public accountant. The maintenance of competence requires a commitment to learning and professional improvement that must continue throughout a member's professional life. It is a member's individual responsibility. In all engagements and in all responsibilities, each member should undertake to achieve a level of competence that will assure that the quality of the member's services meets the high level of professionalism required by these Principles. .03 Competence represents the attainment and maintenance of a level of understanding and knowledge that enables a member to render services with facility and acumen. It also establishes the limitations of a member's capabilities by dictating that consultation or referral may be required when a professional engagement exceeds the personal competence of a member or a member's firm. Each member is responsible for assessing his or her own competence&mdash; of evaluating whether education, experience, and judgment are adequate for the responsibility to be assumed. </P
><P 
 align="justify"
>.04 Members should be diligent in discharging responsibilities to clients, employers, and the public. Diligence imposes the responsibility to render services promptly and carefully, to be thorough, and to observe applicable technical and ethical standards. </P
><P 
 align="justify"
>.05 Due care requires a member to plan and supervise adequately any professional activity for which he or she is responsible. [21] </P
></DIV
><P 
 align="justify"
>There are also specific rules and regulations specifying &ldquo;acts discreditable&rdquo;, disciplining, and peer review [16] [17] [18]. </P
></DIV
><DIV class="Sect" 

><H4 
 align="justify"
><FONT size="+1"><B>6. SUMMARY  </H4
><P 
 align="justify"
><FONT size="+1"></B>In summary, a direct comparison between the various Codes of Conduct on the issue of quality can be made.  Table 1 illustrates the most relevant language directly addressing quality of work. Though none of the codes clearly spell out quality requirements, the progression is fairly clear. The most ambiguous statement is in the IEEE/ACM SE code which asks members to strive for high quality but also incorporates further vagueness by including cost and schedule into the statement.  The ACM code only asks members to strive for highest quality, vague, but uncomplicated by other factors.  The BCS code addresses quality by asking its members to accept professional responsibility for their work. Their work is to include a regard for health, safety, and environment. This proposes a reliance on strong virtue ethics among its members.  Finally, the AICPA spells out the concept that the services performed must be to the best of their ability (quality) and consistent with their responsibility to the public. This is arguably the strongest statement of quality among these four examples. </P
></DIV
><DIV class="Sect" 

><H4 
 align="justify"
><FONT size="+1"><B>7. RECOMMENDATION </H4
><P 
 align="justify"
><FONT size="+1"></B>Improving software quality is not an easy task but is a task that must be undertaken.  The cost to society at present in terms of economic and impact are too great to remain with the status quo. The increased reliance on computers and information technology for all aspects of everyday life has made it essential to improve software quality. The question then is how best to improve this quality.  Market forces have not been successful thus far. Legislated solutions do not seem forthcoming or promising. What remains is a moral and ethical initiative. To depend on the virtuous nature of software developers given all the pressures and influences on them is unrealistic.  My proposal is to provide a strong social association network with strong a strong code of ethics including specific guidelines on software quality.  I believe the following steps need to be taken as quickly as possible. </P
><P 
 align="center"
><B>Table 1. Quality in Selected Codes of Conduct </P
><TABLE 
 align="center" border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 align="left" width="61"  valign="top" height="43" 
></TH><TH 
 align="left" width="136"  valign="top" height="43" 
>IEEE/ACM Software Engineering Code of Ethics </TH
><TH 
 align="left" width="83"  valign="top" height="43" 
>ACM Code of Ethics </TH
><TH 
 align="left" width="172"  valign="top" height="43" 
>British Computer Society Code of Conduct/Code of Practice </TH
><TH 
 align="left" width="216"  valign="top" height="43" 
>AICPA Code of Conduct </TH
></TR
><TR  

><TD  
 align="left" width="61"  valign="top" height="83" 
></B>Quality of work </TD
><TD  
 align="left" width="136"  valign="top" height="83" 
>Strive for high quality, acceptable cost, and a reasonable schedule </TD
><TD  
 align="left" width="83"  valign="top" height="83" 
>Strive to achieve highest quality </TD
><TD  
 align="left" width="172"  valign="top" height="83" 
>Accept professional responsibility for your work. You shall have regard for the public health, safety and environment </TD
><TD  
 align="left" width="216"  valign="top" height="83" 
>Perform professional services to the best of a member's ability with concern for the best interest of those for whom the services are performed and consistent with the profession's responsibility to the public. </TD
></TR
></TABLE
><DIV class="Sect" 

><OL 
 type="1"
><LI 

>Revise the software engineering code of ethics and professional practice to incorporate many of the strong concepts of quality included in the British Computer Society&rsquo;s Codes. </P
></LI
><LI 

>Review the AICPA code and incorporate concepts of quality, integrity, specific discreditable acts, disciplinary procedures, and peer reviews into the SE code. </P
></LI
><LI 

>Form a partnership with governmental agencies such as the Critical Infrastructure Protection Board (Cybersecurity) to require membership to ACM/IEEE and adherence to the strengthened code for all software engineers working on government projects. </P
></LI
><LI 

>Work with industry to demonstrate the necessity of quality software and reduction of software errors and encourage their participation in requiring membership in organizations that adopt the new Code of Ethics. </P
></LI
></OL
></DIV
><P 

>We face a crossroads in our society today. We have an increased reliance on computers but face uncertain quality from these computers. Appropriate, aggressive steps must be taken to address software quality before more major calamities occur. </P
></DIV
><DIV class="Sect" 

><H4 

><FONT size="+1"><B>7. REFERENCES </H4
><DIV class="Sect" 

><P 

><FONT size="+1"></B>[1] Aristotle. 	Nicomachean Ethics, tr. Terrence Irwin Hackett Publishing Company, Indianapolis, 1999. </P
><P 

>[2] 	Artz, J. &ldquo;Virtue vs. Utility: Alternative Foundations for Computer Ethics&rdquo;, Ethics in Computer Age, 1994, 16</P
><P 

>21. </P
><P 

>[3] 	Association for Computing Machinery, Inc. &ldquo;Bylaws of the ACM&rdquo;, 1998, http://www.acm.org/constitution/bylaw15.html </P
><P 

>[4] 	British Computer Society. &ldquo;BCS Code of Conduct&rdquo;, n.d. Available at: http://www1.bcs.org.uk/bm.asp?sectionID=263 </P
><P 

>[5] 	British Computer Society. &ldquo;BCS Code of Practice&rdquo;, n.d. Available at: http://www1.bcs.org.uk/bm.asp?sectionID=263 </P
><P 

>[6] 	Doris, J. &ldquo;Person, situations, and virtue ethics&rdquo;, NOUS (32:4), 1998, 504-530. </P
><P 

>[7] Hume, D. A Treatise of Human Nature. Penguin Books, London, 1969. </P
><P 

>[8] 	Institute of Electrical and Electronics Engineers, Inc. and the Association for Computing Machinery, Inc. (1999). &ldquo;Software Engineering Code of Ethics and Professional Practice.&rdquo; Available at: http://www.computer.org/tab/seprof/code.htm </P
><P 

>[9] 	Merritt, M. &ldquo;Virtue ethics and situationist personality psychology&rdquo;, Ethical Theory and Moral Practice (3), 2000,   365-383. </P
><P 

>[10] Middleton, J. &ldquo;Major viruses cost industry $13bn in 2001&rdquo;, Vnunet, October 1, 2002, Available at: http://www.vnunet.com/News/1128147 </P
><P 

>[11] Ohlson, K. &ldquo;&rsquo;Love&rsquo; virus costs approaching $7B, research firm says&rdquo;, Computerworld, May 9, 2000, Available at: http://www.computerworld.com/news/2000/story/0,112 80,44810,00.html </P
><P 

>[12] Schwalbe, K. Information Technology Project Management, Course Technology: Boston, 2002. </P
><P 

>[13] Sipior, J. and Ward, B. &ldquo;Ethical responsibility for software development&rdquo;.  Information Systems Management (15:2), Spring 1998, 68-72. </P
><P 

>[14]	 &ldquo;Software quality: facts and stats&rdquo;, Computerworld, August 18, 1997 Available at: http://www.computerworld.com/news/1997/story/0,112 80,17522,00.html </P
><P 

>[15] Spanbauer, S. &ldquo;Software Bugs Run Rampant&rdquo;, PC World (17:1), 1999, 46-52. </P
><P 

>[16] The American Institute of Certified Public Accountants &ldquo;BL Section 740 7.4 Disciplining of Member by Trial Board&rdquo;, 2003, Available at: http://www.aicpa.org/about/bylaws/BL740.htm </P
><P 

>[17] The American Institute of Certified Public Accountants &ldquo;ET Section 501 Acts Discreditable&rdquo;, 2003,  Available at: http://www.aicpa.org/about/code/et501.htm </P
><P 

>[18] The American Institute of Certified Public Accountants &ldquo;Exposure Draft - Proposed Revisions to the AICPA Standards for Performing and Reporting on Peer Reviews&rdquo;, 2003,  Available at: http://www.aicpa.org/members/div/practmon/2003_05_ ed.asp </P
><P 

>[19] The American Institute of Certified Public Accountants &ldquo;Section 52 - Article I: Responsibilities&rdquo;, 2003,Available at: http://www.aicpa.org/about/code/article1.htm </P
><P 

>[20] The American Institute of Certified Public Accountants &ldquo;Section 54 - Article III: Integrity&rdquo;, 2003,  Available at: http://www.aicpa.org/about/code/article3.htm </P
><P 

>[21] The American Institute of Certified Public Accountants &ldquo;Section 56 - Article V: Due Care&rdquo; 2003,  Available at: http://www.aicpa.org/about/code/article5.htm </P
><P 

>[22] Verton, D.  	&ldquo;Blaster worm linked to severity of blackout&rdquo; Computerworld, August 31, 2003, http://www.computerworld.com/securitytopics/security/ recovery/story/0,10801,84510,00.html?SKC=home8451 0 </P
><P 

>[23] Verton, D. &ldquo;Cybersecurity czar takes stand on software quality&rdquo;. Computerworld, August 31, 2003, http://www.computerworld.com/securitytopics/security/ story/0,10801,73245,00.html </P
><P 

>[24] Wheeler, S. and Duggins, S. &ldquo;Improving Software Quality&rdquo;, Proceedings of the 36<Sup><FONT size="+1">th</Sup><FONT size="+1"> Annual Southeast Regional ACM conference, 1998, 300-310. </P
></DIV
></DIV
></DIV
></DIV
></BODY>
</HTML>
